<?xml version="1.0" encoding="UTF-8"?>
<!-- Logback Configuration.  -->
<configuration debug="false">
    <property name="log.dir" value="mylogs"/>
    <!-- 测试环境下用的日志输出目的地，只要替换Logger配置里的 apender-ref 为这个就可以了在控制台看到打印的信息 %n%date{yyyy-MM-dd HH:mm:ss} %-5level %logger %m%n-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>
                <![CDATA[ 
                %date [%thread] %-5level %logger{80}:%L - %msg%n
                ]]>
            </pattern>
        </encoder>
    </appender> 
	<appender name="BIZ-APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.dir}/biz.log</file>
		<encoding>${log.charset}</encoding>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 每天生成一个日志文件 -->
			<fileNamePattern>${log.dir}/biz.%d{yyyy-MM-dd}.log</fileNamePattern>
			<!-- 保留30天 -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>
				<![CDATA[
				%n%date{yyyy-MM-dd HH:mm:ss} %-5level %logger %m%n
				]]>
			</pattern>
		</encoder>
	</appender>
	<appender name="EXP-APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.dir}/exp.log</file>
		<encoding>${log.charset}</encoding>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 每天生成一个日志文件 -->
			<fileNamePattern>${log.dir}/exp.%d{yyyy-MM-dd}.log</fileNamePattern>
			<!-- 保留30天 -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>
				<![CDATA[
				%n%date{yyyy-MM-dd HH:mm:ss} %-5level %logger %m%n
				]]>
			</pattern>
		</encoder>
	</appender> 
	 <!-- 异步输出 -->  
     <appender name ="async1" class= "ch.qos.logback.classic.AsyncAppender">  
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->  
        <discardingThreshold >0</discardingThreshold>  
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->  
        <queueSize>512</queueSize>  
        <!-- 添加附加的appender,最多只能添加一个 -->  
        <appender-ref ref ="BIZ-APPENDER"/>  
     </appender>
      <appender name ="async2" class= "ch.qos.logback.classic.AsyncAppender">  
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->  
        <discardingThreshold >0</discardingThreshold>  
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->  
        <queueSize>512</queueSize>  
        <!-- 添加附加的appender,最多只能添加一个 -->  
        <appender-ref ref ="EXP-APPENDER"/>  
     </appender>  
 
 
	<logger name="com.ibatis" additivity="false">
        <level value="WARN" />
        <appender-ref ref="async2" />
        <appender-ref ref="STDOUT"></appender-ref>
	</logger>
	<logger name="org.springframework.jdbc" additivity="false">
        <level value="WARN" />
        <appender-ref ref="async2" />
        <appender-ref ref="STDOUT"></appender-ref>
	</logger>
	<logger name="org.springframework.orm" additivity="false">
        <level value="WARN" />
        <appender-ref ref="async2" />
        <appender-ref ref="STDOUT"></appender-ref>
	</logger>
	<logger name="org.springframework" additivity="false">
        <level value="WARN" />
        <appender-ref ref="async2" />
        <appender-ref ref="STDOUT"></appender-ref>
	</logger>
	<logger name="com.alibaba.citrus" additivity="false">
        <level value="WARN" />
        <appender-ref ref="async2" />
        <appender-ref ref="STDOUT"></appender-ref>
	</logger>
    <logger name="com.toone" additivity="false">
        <level value="info" />
        <appender-ref ref="STDOUT"></appender-ref>
        <appender-ref ref="async1" /> 
    </logger> 
     <logger name="com.cangwu" additivity="false">
        <level value="info" />
        <appender-ref ref="STDOUT"></appender-ref>
        <appender-ref ref="async1" /> 
    </logger> 
    
    <!-- jiqij -->
	<logger name="java.sql" level="debug"/>
    <root>
        <level value="debug" />
        <appender-ref ref="async" />
        <appender-ref ref="STDOUT" /> 
    </root>
</configuration>
